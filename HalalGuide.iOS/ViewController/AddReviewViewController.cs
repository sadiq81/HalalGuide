// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using HalalGuide.iOS.ViewController;
using HalalGuide.ViewModels;
using HalalGuide.Util;
using HalalGuide.Domain.Enums;
using HalalGuide.Services;

namespace HalalGuide.iOS.ViewController
{
	public partial class AddReviewViewController : KeyboardSupportedUIViewController
	{
		private readonly AddReviewViewModel ViewModel = ServiceContainer.Resolve<AddReviewViewModel> ();
		private readonly int STAR_TAG_START = 101;
		private readonly int STAR_TAG_END = 105;

		private int Rating = 1;

		public AddReviewViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			SetupReviewTextField ();
		}

		#region Setup

		private void SetupReviewTextField ()
		{
			Review.Layer.BorderColor = UIColor.Gray.CGColor;
			Review.Layer.BorderWidth = 2;
			Review.Layer.CornerRadius = 5;
			Review.ClipsToBounds = true;
		}

		#endregion

		#region Actions

		partial void Regreet (UIBarButtonItem sender)
		{

		}

		async partial  void Save (UIBarButtonItem sender)
		{

			ResignFirstResponder ();

			InvokeOnMainThread (ActivityIndicator.StartAnimating);

			await ViewModel.CreateNewReview (ViewModel.selectedLocation, Rating, Review.Text);

			ActivityIndicator.StopAnimating ();

			//TODO
			/*
			if (result == CreateEntityResult.OK) {
				new UIAlertView (Localization.GetLocalizedValue (Feedback.Ok), Localization.GetLocalizedValue (Feedback.ReviewSendToReview), null, Localization.GetLocalizedValue (Feedback.Ok), null){ WeakDelegate = this }.Show ();
			} else {
				new UIAlertView (Localization.GetLocalizedValue (Feedback.Error), Localization.GetLocalizedValue (result.ToString ()), null, Localization.GetLocalizedValue (Feedback.Ok), null).Show ();
			}
			*/

		}

		partial void StarPressed (UIButton sender)
		{
			Review.ResignFirstResponder ();

			int tag = sender.Tag;
			Rating = tag - 100;
			for (int i = STAR_TAG_START; i <= STAR_TAG_END; i++) {
				UIButton button = (UIButton)View.ViewWithTag (i);
				if (button.Tag <= tag) {
					button.SetImage (UIImage.FromBundle (Images.StarSelected), UIControlState.Normal);
				} else {
					button.SetImage (UIImage.FromBundle (Images.Star), UIControlState.Normal);
				}
			}
		}

		#endregion

		[Export ("alertView:clickedButtonAtIndex:")]
		public virtual void Clicked (UIAlertView alertview, int buttonIndex)
		{
			if (PresentingViewController.PresentingViewController != null) {
				PresentingViewController.PresentingViewController.DismissViewController (true, null);
			} else {
				PresentingViewController.DismissViewController (true, null);
			}
		}

		[Export ("positionForBar:")]
		public  UIBarPosition GetPositionForBar (IUIBarPositioning barPositioning)
		{
			return UIBarPosition.TopAttached;
		}
	}
}
