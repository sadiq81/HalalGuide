// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using HalalGuide.Domain;
using HalalGuide.Domain.Enum;
using HalalGuide.ViewModels;

namespace HalalGuide.iOS
{
	public partial class LandingPageController : UIViewController
	{
		public LandingPageController (IntPtr handle) : base (handle)
		{
		}

		public override void  ViewDidLoad ()
		{
			base.ViewDidLoad ();

			LatestUpdated.Source = new LatestTableSource (LatestUpdated);
		}

	}

	public class LatestTableSource : UITableViewSource
	{


		public LatestViewModel ViewModel = new LatestViewModel ();

		private UITableViewController ViewController = new UITableViewController ();
		private UIRefreshControl RefreshControl = new UIRefreshControl ();

		public LatestTableSource (UITableView latestUpdated)
		{
			ViewController.TableView = latestUpdated;
			ViewController.RefreshControl = RefreshControl;
			RefreshControl.ValueChanged += async (sender, e) => {
				RefreshControl.BeginRefreshing ();
				await ViewModel.Update ();
				latestUpdated.ReloadData ();
				RefreshControl.EndRefreshing ();
			};

			Initialize ();
		}

		private async void   Initialize ()
		{

			await ViewModel.Update ();
			ViewController.TableView.ReloadSections (new NSIndexSet (0), UITableViewRowAnimation.Top);

		}

		public override int RowsInSection (UITableView tableview, int section)
		{
			return ViewModel.Rows ();
		}

		public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
		{
			Location l = ViewModel.GetLocationAtRow (indexPath.Item);

			UITableViewCell cell = tableView.DequeueReusableCell (l.LocationType.ToString ());

			switch (l.LocationType) {
			case LocationType.Dining:
				{
					((DiningCell)cell).ConfigureLocation (l);
					break;
				}
			case LocationType.Shop:
				{
					((ShopCell)cell).ConfigureLocation (l);
					break;
				}
			case LocationType.Mosque:
				{
					((MosqueCell)cell).ConfigureLocation (l);
					break;
				}
			}

			return cell;
		}

		public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
		{
			tableView.DeselectRow (indexPath, true); // normal iOS behaviour is to remove the blue highlight
		}
	}

}
