// This file has been autogenerated from a class added in the UI designer.

using System;
using MonoTouch.UIKit;
using XUbertestersSDK;
using HalalGuide.Util;
using MonoTouch.Foundation;
using HalalGuide.Domain;
using System.Security.Cryptography;
using SimpleDBPersistence.Service;
using HalalGuide.ViewModels;
using HalalGuide.Domain.Enum;

namespace HalalGuide.iOS
{
	public partial class ReviewController : KeyboardSupportedUIViewController
	{
		private readonly ReviewViewModel ViewModel = ServiceContainer.Resolve<ReviewViewModel> ();
		private readonly AddDiningViewModel AddViewModel = ServiceContainer.Resolve<AddDiningViewModel> ();
		private readonly int STAR_TAG_START = 101;
		private readonly int STAR_TAG_END = 105;

		public Location Location { get; set; }

		private int Rating = 1;

		public ReviewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			XUbertesters.LogInfo ("ReviewController: ViewDidLoad-Start");
			base.ViewDidLoad ();
			SetupReviewTextField ();
			XUbertesters.LogInfo ("ReviewController: ViewDidLoad-End");
		}

		#region Setup

		private void SetupReviewTextField ()
		{
			ReviewTextField.Layer.BorderColor = UIColor.Gray.CGColor;
			ReviewTextField.Layer.BorderWidth = 2;
			ReviewTextField.Layer.CornerRadius = 5;
			ReviewTextField.ClipsToBounds = true;
		}

		#endregion

		#region Actions

		partial void Regreet (NSObject sender)
		{
			XUbertesters.LogInfo ("ReviewController: Regreet-Start");
			PresentingViewController.PresentingViewController.DismissViewController (true, null);
			XUbertesters.LogInfo ("ReviewController: Regreet-End");

		}

		async partial  void Save (NSObject sender)
		{
			XUbertesters.LogInfo ("ReviewController: Save-Start");

			InvokeOnMainThread (ActivityIndicator.StartAnimating);

			CreateReviewResult result = await ViewModel.CreateNewReview (AddViewModel.Location, Rating, ReviewTextField.Text);

			ActivityIndicator.StopAnimating ();

			if (result == CreateReviewResult.OK) {
				new UIAlertView ("Ok", "Din anmeldelse er sent til godkendelse", null, "Ok", null){ WeakDelegate = this }.Show ();
			} else {
				new UIAlertView ("Fejl", result.ToString (), null, "Ok", null).Show ();
			}

			XUbertesters.LogInfo ("ReviewController: Save-Start");
		}

		partial void StarPressed (UIButton sender)
		{
			ReviewTextField.ResignFirstResponder ();

			int tag = sender.Tag;
			Rating = tag - 100;
			for (int i = STAR_TAG_START; i <= STAR_TAG_END; i++) {
				UIButton button = (UIButton)View.ViewWithTag (i);
				if (button.Tag <= tag) {
					button.SetImage (UIImage.FromBundle (Constants.StarSelected), UIControlState.Normal);
				} else {
					button.SetImage (UIImage.FromBundle (Constants.Star), UIControlState.Normal);
				}
			}
		}

		#endregion

		[Export ("alertView:clickedButtonAtIndex:")]
		public virtual void Clicked (UIAlertView alertview, int buttonIndex)
		{
			PresentingViewController.PresentingViewController.DismissViewController (true, null);
		}

		[Export ("positionForBar:")]
		public  UIBarPosition GetPositionForBar (IUIBarPositioning barPositioning)
		{
			return UIBarPosition.TopAttached;
		}
	}
}
